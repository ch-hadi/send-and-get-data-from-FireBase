{"ast":null,"code":"import _regeneratorRuntime from\"G:\\\\udmy\\\\Api\\\\api\\\\send to firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"G:\\\\udmy\\\\Api\\\\api\\\\send to firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"G:\\\\udmy\\\\Api\\\\api\\\\send to firebase\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useCallback}from'react';import MoviesList from'./components/MoviesList';import AddMovie from'./components/AddMovie';import'./App.css';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isLoading=_useState4[0],setIsLoading=_useState4[1];var _useState5=useState(null),_useState6=_slicedToArray(_useState5,2),error=_useState6[0],setError=_useState6[1];var fetchMoviesHandler=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var response,data,loadedMovies,key;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setIsLoading(true);setError(null);_context.prev=2;_context.next=5;return fetch('https://react-http-send-get-default-rtdb.asia-southeast1.firebasedatabase.app/mov.json');case 5:response=_context.sent;_context.next=8;return response.json();case 8:data=_context.sent;// console.log(data);\nloadedMovies=[];for(key in data){loadedMovies.push({id:key,title:data[key].title,openingText:data[key].openingText,releaseDate:data[key].releaseDate});}console.log(loadedMovies);// const transformedMovies = data.results.map((movieData) => {\n//   return {\n//     id: movieData.episode_id,\n//     title: movieData.title,\n//     openingText: movieData.opening_crawl,\n//     releaseDate: movieData.release_date,\n//   };\n// });\nsetMovies(loadedMovies);_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](2);setError(_context.t0.message);case 18:setIsLoading(false);case 19:case\"end\":return _context.stop();}}},_callee,null,[[2,15]]);})),[]);useEffect(function(){fetchMoviesHandler();},[fetchMoviesHandler]);function addMovieHandler(_x){return _addMovieHandler.apply(this,arguments);}function _addMovieHandler(){_addMovieHandler=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(movie){var response,data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return fetch('https://react-http-send-get-default-rtdb.asia-southeast1.firebasedatabase.app/mov.json',{method:'POST',body:JSON.stringify(movie),headers:{'Content-Type':'application/json'}});case 2:response=_context2.sent;_context2.next=5;return response.json();case 5:data=_context2.sent;case 6:case\"end\":return _context2.stop();}}},_callee2);}));return _addMovieHandler.apply(this,arguments);}var content=/*#__PURE__*/React.createElement(\"p\",null,\"Found no movies.\");if(movies.length>0){content=/*#__PURE__*/React.createElement(MoviesList,{movies:movies});}if(error){content=/*#__PURE__*/React.createElement(\"p\",null,error);}if(isLoading){content=/*#__PURE__*/React.createElement(\"p\",null,\"Loading...\");}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(AddMovie,{onAddMovie:addMovieHandler})),/*#__PURE__*/React.createElement(\"section\",null,/*#__PURE__*/React.createElement(\"button\",{onClick:fetchMoviesHandler},\"Fetch Movies\")),/*#__PURE__*/React.createElement(\"section\",null,content));}export default App;","map":{"version":3,"sources":["G:/udmy/Api/api/send to firebase/src/App.js"],"names":["React","useState","useEffect","useCallback","MoviesList","AddMovie","App","movies","setMovies","isLoading","setIsLoading","error","setError","fetchMoviesHandler","fetch","response","json","data","loadedMovies","key","push","id","title","openingText","releaseDate","console","log","message","addMovieHandler","movie","method","body","JSON","stringify","headers","content","length"],"mappings":"6dAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,CAAqCC,WAArC,KAAwD,OAAxD,CAEA,MAAOC,CAAAA,UAAP,KAAuB,yBAAvB,CACA,MAAOC,CAAAA,QAAP,KAAqB,uBAArB,CACA,MAAO,WAAP,CAEA,QAASC,CAAAA,GAAT,EAAe,CACb,cAA4BL,QAAQ,CAAC,EAAD,CAApC,wCAAOM,MAAP,eAAeC,SAAf,eACA,eAAkCP,QAAQ,CAAC,KAAD,CAA1C,yCAAOQ,SAAP,eAAkBC,YAAlB,eACA,eAA0BT,QAAQ,CAAC,IAAD,CAAlC,yCAAOU,KAAP,eAAcC,QAAd,eAEC,GAAMC,CAAAA,kBAAkB,CAAGV,WAAW,sEAAC,sKACtCO,YAAY,CAAC,IAAD,CAAZ,CACAE,QAAQ,CAAC,IAAD,CAAR,CAFsC,sCAIbE,CAAAA,KAAK,CAAC,wFAAD,CAJQ,QAI9BC,QAJ8B,qCAWjBA,CAAAA,QAAQ,CAACC,IAAT,EAXiB,QAW9BC,IAX8B,eAYpC;AACMC,YAb8B,CAaf,EAbe,CAcpC,IAAWC,GAAX,GAAkBF,CAAAA,IAAlB,CAAuB,CACrBC,YAAY,CAACE,IAAb,CACE,CACEC,EAAE,CAACF,GADL,CAEEG,KAAK,CAAEL,IAAI,CAACE,GAAD,CAAJ,CAAUG,KAFnB,CAGEC,WAAW,CAACN,IAAI,CAACE,GAAD,CAAJ,CAAUI,WAHxB,CAIEC,WAAW,CAACP,IAAI,CAACE,GAAD,CAAJ,CAAUK,WAJxB,CADF,EAQD,CACFC,OAAO,CAACC,GAAR,CAAYR,YAAZ,EACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,SAAS,CAACU,YAAD,CAAT,CAjCoC,iFAmCpCN,QAAQ,CAAC,YAAMe,OAAP,CAAR,CAnCoC,QAqCtCjB,YAAY,CAAC,KAAD,CAAZ,CArCsC,qEAAD,GAsCpC,EAtCoC,CAAtC,CAwCDR,SAAS,CAAC,UAAM,CACdW,kBAAkB,GACnB,CAFQ,CAEN,CAACA,kBAAD,CAFM,CAAT,CA7Ca,QAiDEe,CAAAA,eAjDF,yJAiDb,kBAA+BC,KAA/B,+JACyBf,CAAAA,KAAK,CAAC,wFAAD,CAA4F,CAEtHgB,MAAM,CAAE,MAF8G,CAGtHC,IAAI,CAAEC,IAAI,CAACC,SAAL,CAAeJ,KAAf,CAHgH,CAItHK,OAAO,CAAG,CAAC,eAAiB,kBAAlB,CAJ4G,CAA5F,CAD9B,QACQnB,QADR,uCAOgBA,CAAAA,QAAQ,CAACC,IAAT,EAPhB,QAOKC,IAPL,wEAjDa,kDA0Db,GAAIkB,CAAAA,OAAO,cAAG,gDAAd,CAEA,GAAI5B,MAAM,CAAC6B,MAAP,CAAgB,CAApB,CAAuB,CACrBD,OAAO,cAAG,oBAAC,UAAD,EAAY,MAAM,CAAE5B,MAApB,EAAV,CACD,CAED,GAAII,KAAJ,CAAW,CACTwB,OAAO,cAAG,6BAAIxB,KAAJ,CAAV,CACD,CAED,GAAIF,SAAJ,CAAe,CACb0B,OAAO,cAAG,0CAAV,CACD,CAED,mBACE,oBAAC,KAAD,CAAO,QAAP,mBACE,gDACE,oBAAC,QAAD,EAAU,UAAU,CAAEP,eAAtB,EADF,CADF,cAIE,gDACE,8BAAQ,OAAO,CAAEf,kBAAjB,iBADF,CAJF,cAOE,mCAAUsB,OAAV,CAPF,CADF,CAWD,CAED,cAAe7B,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\n\nimport MoviesList from './components/MoviesList';\nimport AddMovie from './components/AddMovie';\nimport './App.css';\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n   const fetchMoviesHandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch('https://react-http-send-get-default-rtdb.asia-southeast1.firebasedatabase.app/mov.json');\n    \n    \n      // if (!response.ok) {\n      //   throw new Error('Something went wrong!');\n      // }\n\n      const data = await response.json();\n      // console.log(data);\n      const loadedMovies = [];\n      for (const key in data){\n        loadedMovies.push (\n          {\n            id:key, \n            title :data[key].title, \n            openingText:data[key].openingText,\n            releaseDate:data[key].releaseDate\n          }\n        )\n      }\n     console.log(loadedMovies);\n      // const transformedMovies = data.results.map((movieData) => {\n      //   return {\n      //     id: movieData.episode_id,\n      //     title: movieData.title,\n      //     openingText: movieData.opening_crawl,\n      //     releaseDate: movieData.release_date,\n      //   };\n      // });\n      setMovies(loadedMovies);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchMoviesHandler();\n  }, [fetchMoviesHandler], );\n\n  async function addMovieHandler(movie) {\n    const response = await fetch('https://react-http-send-get-default-rtdb.asia-southeast1.firebasedatabase.app/mov.json' , {\n       \n      method: 'POST',\n      body :JSON.stringify(movie),\n      headers : {'Content-Type' : 'application/json'}\n });\n const data=await response.json();\n  }\n  let content = <p>Found no movies.</p>;\n\n  if (movies.length > 0) {\n    content = <MoviesList movies={movies} />;\n  }\n\n  if (error) {\n    content = <p>{error}</p>;\n  }\n\n  if (isLoading) {\n    content = <p>Loading...</p>;\n  }\n\n  return (\n    <React.Fragment>\n      <section>\n        <AddMovie onAddMovie={addMovieHandler} />\n      </section>\n      <section>\n        <button onClick={fetchMoviesHandler}>Fetch Movies</button>\n      </section>\n      <section>{content}</section>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}